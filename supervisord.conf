[supervisord]
nodaemon=true
logfile=/dev/null

[program:flask]
directory=/app
# command=python -m gunicorn -b 0.0.0.0:5000 --timeout 600 --workers 2 app:app
command=python -m gunicorn -b 0.0.0.0:8080 --timeout 600 --workers 2 app:app
# command=/bin/sh -c 'exec python -m gunicorn -b 0.0.0.0:${PORT:-5000} --timeout 600 --workers 2 app:app'
autostart=true
autorestart=true
startsecs=5
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
environment=PYTHONUNBUFFERED=1,FLASK_ENV=production

[program:definition_celery_worker1]
directory=/app
command=python -m celery -A celery_config.celery_app worker --loglevel=info --concurrency=2 -n workermc1@%%h
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
environment=PYTHONUNBUFFERED=1

[program:definition_celery_worker2]
directory=/app
command=python -m celery -A celery_config.celery_app worker --loglevel=info --concurrency=2 -n workermc2@%%h
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
environment=PYTHONUNBUFFERED=1

# Replace your Gunicorn command in supervisord.conf with:

# command=/bin/sh -c 'exec python -m gunicorn -b 0.0.0.0:${PORT:-5000} --timeout 600 --workers 2 app:app'
# This shell trick means:
# If Azure sets PORT (e.g. PORT=8080), Gunicorn will listen on port 8080.
# If not, it defaults to 5000.
# This works 100% of the time on all Azure flavors (Web App for Containers, ACA, ACI, AKS).